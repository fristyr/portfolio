"use strict";function _classCallCheck(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}function _defineProperties(e,t){for(var n=0;n<t.length;n++){var a=t[n];a.enumerable=a.enumerable||!1,a.configurable=!0,"value"in a&&(a.writable=!0),Object.defineProperty(e,a.key,a)}}function _createClass(e,t,n){return t&&_defineProperties(e.prototype,t),n&&_defineProperties(e,n),e}!function(){var e,t,n,a,o,r,i,c,s,l,d,u,m,f,h,_,p=["a web developer","a front-end developer","a JavaScript developer"],v=new(function(){function t(e){_classCallCheck(this,t),this.el=e,this.chars="!<>-_\\/[]{}=+*^?#",this.update=this.update.bind(this)}return _createClass(t,[{key:"setText",value:function(e){var t=this,n=this.el.innerText,a=Math.max(n.length,e.length),o=new Promise(function(e){return t.resolve=e});this.queue=[];for(var r=0;r<a;r++){var i=n[r]||"",c=e[r]||"",s=Math.floor(100*Math.random()),l=s+Math.floor(100*Math.random());this.queue.push({from:i,to:c,start:s,end:l})}return cancelAnimationFrame(this.frameRequest),this.frame=0,this.update(),o}},{key:"update",value:function(){for(var e="",t=0,n=0,a=this.queue.length;n<a;n++){var o=this.queue[n],r=o.from,i=o.to,c=o.start,s=o.end,l=o.char;this.frame>=s?(t++,e+=i):this.frame>=c?((!l||Math.random()<.01)&&(l=this.randomChar(),this.queue[n].char=l),e+='<span class="intro__subtitle_char">'.concat(l,"</span>")):e+=r}this.el.innerHTML=e,t===this.queue.length?this.resolve():(this.frameRequest=requestAnimationFrame(this.update),this.frame++)}},{key:"randomChar",value:function(){return this.chars[Math.floor(Math.random()*this.chars.length)]}}]),t}())(document.querySelector(".intro__subtitle")),y=0,L=function e(){v.setText(p[y]).then(function(){setTimeout(e,1800)}),y=(y+1)%p.length};L(),document.body.onload=function(){setTimeout(function(){var e=document.getElementById("page-reloader");e.classList.contains("done")||e.classList.add("done")},1e3)},function(){var e=document.querySelector(".burger-menu"),t=document.querySelector(".main-modal"),n=document.querySelector(".main-modal__content"),a=document.querySelector(".main-modal__close"),o=document.querySelectorAll(".main-modal__content_link");function r(){t.style.transform="translateY(-200%)"}e.addEventListener("click",function(){t.classList.add("main-modal_active"),t.style="",setTimeout(function(){n.classList.add("main-modal__content_active"),a.classList.add("main-modal__close_active")},1e3)}),a.addEventListener("click",function(){r()}),o.forEach(function(e,t,n){e.addEventListener("click",function(){r()})})}(),e=document.querySelector(".git-butt"),t=document.querySelector(".git"),n=document.querySelector(".git__close-btn"),e.addEventListener("click",function(){t.classList.remove("git_active","animated","fadeOutUp"),t.classList.add("git_active","animated","fadeInRight")}),t.addEventListener("animationend",function(){n.addEventListener("click",function(){t.classList.remove("animated","fadeInRight"),t.classList.add("animated","fadeOutUp")})}),a=document.querySelector(".map-modal"),o=document.querySelector(".footer-contact__location"),r=a.querySelector(".map-modal__close"),o.addEventListener("click",function(){a.classList.remove("map-modal_active","animated","fadeOutUp"),a.classList.add("map-modal_active","animated","fadeInLeft")}),a.addEventListener("animationend",function(){r.addEventListener("click",function(){a.classList.remove("animated","fadeInLeft"),a.classList.add("animated","fadeOutUp")})}),i=document.querySelector(".form-modal"),c=document.querySelector(".footer-contact__btn"),s=document.querySelector(".postcard_close"),c.addEventListener("click",function(){i.classList.remove("form-modal_active","animated","fadeOutDown"),i.classList.add("form-modal_active","animated","fadeInRight")}),i.addEventListener("animationend",function(){s.addEventListener("click",function(){i.classList.remove("animated","fadeInRight"),i.classList.add("animated","fadeOutDown")})}),l=document.querySelector(".form-row__submit"),d=document.querySelector(".postcard"),u=document.querySelectorAll(".form-row__inp"),document.querySelectorAll(".form-row__lb"),m=document.querySelector(".form-row__reset"),l.addEventListener("click",function(e){u.forEach(function(e,t,n){""===e.value&&(d.classList.add("animated","shake"),e.classList.add("form-row__inp_wrong"),formBlock.addEventListener("animationend",function(){d.classList.remove("animated","shake")}))})}),m.addEventListener("click",function(){u.forEach(function(e,t,n){e.classList.contains("form-row__inp_wrong")&&e.classList.remove("form-row__inp_wrong")})}),f=document.querySelector(".workflow-info__p q"),h=document.querySelector(".skills"),_=document.querySelector(".skills__butt"),f.addEventListener("click",function(){h.classList.remove("skills_active","animated","fadeOutUp"),h.classList.add("skills_active","animated","fadeInRight")}),h.addEventListener("animationend",function(){_.addEventListener("click",function(){h.classList.remove("animated","fadeInRight"),h.classList.add("animated","fadeOutUp")})}),function(){var e=document.querySelector(".portfolio-btn_left"),t=document.querySelector(".portfolio-btn_right"),n=document.querySelector(".work__img"),a=document.querySelector(".work__info-title"),o=document.querySelector(".work-info__text_pages span"),r=document.querySelector(".work__info-cite"),i=document.querySelector(".work__info-title"),c=[n,a,o,r],s=["img/mouse.jpg","img/sedona.jpg","img/tesla.jpg","img/loco.jpg"],l=["Catch mice","Sedona","Tesla","Loco"],d=["https://webheroschool.github.io/fristyr-js-game/","https://fristyr.github.io/fristyr-sedona/","https://webheroschool.github.io/tesla-fristyr/","https://webheroschool.github.io/loco/"],u=["Try to catch the mouse, simple js game","Sedona - my first simple HTML CSS project","Loco - simple responsive landig page","Tesla - simple responsive landig page"],m=["01","02","03","04"],f=0;function h(){c.forEach(function(e,t,n){e.classList.add("animated","fadeIn","fast")})}function _(){c.forEach(function(e,t,n){e.addEventListener("animationend",function(){e.classList.remove("animated","fadeIn","fast")})})}t.addEventListener("click",function(){s.length<=++f&&(f=0),n.src=s[f],i.href=d[f],a.innerHTML=l[f],o.innerHTML=m[f],r.innerHTML=u[f],h(),_()},_()),e.addEventListener("click",function(){--f<0&&(f=s.length-1),n.src=s[f],i.href=d[f],a.innerHTML=l[f],o.innerHTML=m[f],r.innerHTML=u[f],h(),_()},_())}(),fetch("https://api.github.com/users/fristyr/repos").then(function(e){return e.json()}).then(function(e){var t=document.querySelector(".repos-wrapp"),n=e.map(function(e){var t=e.html_url;return'\n              <article class="repo"> \n                  <a href="'.concat(t,'" target="_blank" class="repo__name">').concat(e.name,'</a>\n                  <div class="repo__info">\n                      <span class="repo__technology">').concat(e.language,'</span> \n                      <span class="repo__technology repo__technology_stars">').concat(e.stargazers_count,'</span>\n                      <span class="repo__technology repo__technology_fork">').concat(e.forks,'</span> \n                      <span class="repo__update">Updated on ').concat(new Date(e.updated_at).toLocaleDateString("en-EN",{day:"numeric",month:"long",year:"numeric"}).replace(" y.",""),"</span>\n                  </div>\n              </article>\n              ")});t.insertAdjacentHTML("afterbegin",n.join(" "))}),function(){var e=document.querySelectorAll('a[href*="#"]'),t=!0,n=!1,a=void 0;try{for(var o,r=function(){var n=o.value;n.addEventListener("click",function(e){e.preventDefault();var t=n.getAttribute("href");document.querySelector(""+t).scrollIntoView({behavior:"smooth",block:"start"})})},i=e[Symbol.iterator]();!(t=(o=i.next()).done);t=!0)r()}catch(e){n=!0,a=e}finally{try{t||null==i.return||i.return()}finally{if(n)throw a}}}(),L()}();
//# sourceMappingURL=data:application/json;charset=utf8;base64,
